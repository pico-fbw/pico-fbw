# See platform/pico/cmake/pico.cmake for comments regarding the structure of this file
add_definitions(-DFBW_PLATFORM_ESP)

include(${CMAKE_CURRENT_LIST_DIR}/esp_idf_import.cmake)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_TOOLCHAIN_FILE ${IDF_PATH}/tools/cmake/toolchain-esp32.cmake)

function(setup_before_subdirs)
    idf_build_process(esp32
        COMPONENTS
            # See IDF_PATH/components/README.md for a list of available components
            driver
            esptool_py
            freertos
        SDKCONFIG
            ${CMAKE_SOURCE_DIR}/platform/esp/sdkconfig
    )
    add_executable(${PROJECT_NAME} ${CMAKE_SOURCE_DIR}/src/main.c)
endfunction()

function(setup_after_subdirs)
    idf_build_executable(${PROJECT_NAME})
    # Automatically run esptool to convert the ELF file generated by the compiler to a .bin image that is flashable
    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND esptool.py --chip esp32 elf2image ${CMAKE_BINARY_DIR}/${PROJECT_NAME}
    )
endfunction()
